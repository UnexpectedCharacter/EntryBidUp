package es.cybernote.entryBidUpDeployer.contractWrapper;


import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.*;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint64;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.1.0.
 */
public class AdminDemo extends Contract {
    private static final String BINARY = "608060405234801561001057600080fd5b5060008054600160a060020a03191633179055611f00806100326000396000f3006080604052600436106100b55763ffffffff60e060020a6000350416627cb81581146100ba578063053af53d1461013057806323364dac1461020957806323fee7431461026d57806328623408146102e657806350de2c891461033f57806354e2fce0146103a357806359a4f4d7146104485780638274fa30146104a1578063cd25bf7214610521578063ce5b9ab814610585578063dd6e8d49146105ea578063ee827b7f14610655578063f3af809d146106b9575b600080fd5b3480156100c657600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526101139436949293602493928401919081908401838280828437509497506107129650505050505050565b6040805167ffffffffffffffff9092168252519081900360200190f35b34801561013c57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261019494369492936024939284019190819084018382808284375094975050509235600160a060020a0316935061089292505050565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101ce5781810151838201526020016101b6565b50505050905090810190601f1680156101fb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021557600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261011394369492936024939284019190819084018382808284375094975050509235600160a060020a03169350610aa092505050565b34801561027957600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526102d29436949293602493928401919081908401838280828437509497505050923567ffffffffffffffff169350610c1a92505050565b604080519115158252519081900360200190f35b3480156102f257600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526102d2943694929360249392840191908190840183828082843750949750610d9b9650505050505050565b34801561034b57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261011394369492936024939284019190819084018382808284375094975050509235600160a060020a03169350610f1692505050565b3480156103af57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261044694369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497505050923567ffffffffffffffff169350610fb992505050565b005b34801561045457600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526101949436949293602493928401919081908401838280828437509497506110ee9650505050505050565b3480156104ad57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261050594369492936024939284019190819084018382808284375094975050509235600160a060020a031693506112f592505050565b60408051600160a060020a039092168252519081900360200190f35b34801561052d57600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526102d294369492936024939284019190819084018382808284375094975050509235600160a060020a0316935061147692505050565b34801561059157600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526104469436949293602493928401919081908401838280828437509497505050923567ffffffffffffffff1693506115f192505050565b3480156105f657600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526106439436949293602493928401919081908401838280828437509497506119ff9650505050505050565b60408051918252519081900360200190f35b34801561066157600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261064394369492936024939284019190819084018382808284375094975050509235600160a060020a03169350611b3892505050565b3480156106c557600080fd5b506040805160206004803580820135601f8101849004840285018401909552848452610505943694929360249392840191908190840183828082843750949750611c719650505050505050565b6000805b60008054600160a060020a031681526001602052604090205481101561088c57826040518082805190602001908083835b602083106107665780518252601f199092019160209182019101610747565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912060008054600160a060020a031681526001909252929020805492945092508491821090506107b857fe5b906000526020600020906003020160000160405180828054600181600116156101000203166002900480156108245780601f10610802576101008083540402835291820191610824565b820191906000526020600020905b815481529060010190602001808311610810575b505091505060405180910390206000191614156108845760008054600160a060020a0316815260016020526040902080548290811061085f57fe5b600091825260209091206002600390920201015467ffffffffffffffff16915061088c565b600101610716565b50919050565b606060005b600160a060020a038316600090815260026020526040902054811015610a9957836040518082805190602001908083835b602083106108e75780518252601f1990920191602091820191016108c8565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120600160a060020a038916600090815260029092529290208054929450925084918210905061093957fe5b906000526020600020906003020160000160405180828054600181600116156101000203166002900480156109a55780601f106109835761010080835404028352918201916109a5565b820191906000526020600020905b815481529060010190602001808311610991575b50509150506040518091039020600019161415610a9157600160a060020a03831660009081526002602052604090208054829081106109e057fe5b90600052602060002090600302016001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a855780601f10610a5a57610100808354040283529160200191610a85565b820191906000526020600020905b815481529060010190602001808311610a6857829003601f168201915b50505050509150610a99565b600101610897565b5092915050565b6000805b600160a060020a038316600090815260026020526040902054811015610a9957836040518082805190602001908083835b60208310610af45780518252601f199092019160209182019101610ad5565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120600160a060020a0389166000908152600290925292902080549294509250849182109050610b4657fe5b90600052602060002090600302016000016040518082805460018160011615610100020316600290048015610bb25780601f10610b90576101008083540402835291820191610bb2565b820191906000526020600020905b815481529060010190602001808311610b9e575b50509150506040518091039020600019161415610c1257600160a060020a0383166000908152600260205260409020805482908110610bed57fe5b600091825260209091206002600390920201015467ffffffffffffffff169150610a99565b600101610aa4565b6000805b60008054600160a060020a0316815260016020526040902054811015610a9957836040518082805190602001908083835b60208310610c6e5780518252601f199092019160209182019101610c4f565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912060008054600160a060020a03168152600190925292902080549294509250849182109050610cc057fe5b90600052602060002090600302016000016040518082805460018160011615610100020316600290048015610d2c5780601f10610d0a576101008083540402835291820191610d2c565b820191906000526020600020905b815481529060010190602001808311610d18575b50509150506040518091039020600019161415610d935760008054600160a060020a03168152600160205260409020805482908110610d6757fe5b600091825260209091206002600390920201015467ffffffffffffffff90811690841610159150610a99565b600101610c1e565b6000805b60008054600160a060020a031681526001602052604090205481101561088c57826040518082805190602001908083835b60208310610def5780518252601f199092019160209182019101610dd0565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912060008054600160a060020a03168152600190925292902080549294509250849182109050610e4157fe5b90600052602060002090600302016000016040518082805460018160011615610100020316600290048015610ead5780601f10610e8b576101008083540402835291820191610ead565b820191906000526020600020905b815481529060010190602001808311610e99575b50509150506040518091039020600019161415610f0e5760008054600160a060020a03168152600160205260409020805482908110610ee857fe5b9060005260206000209060030201600201601c9054906101000a900460ff16915061088c565b600101610d9f565b60006003836040518082805190602001908083835b60208310610f4a5780518252601f199092019160209182019101610f2b565b51815160209384036101000a600019018019909216911617905292019485525060408051948590038201909420600160a060020a0396909616600090815295905250509091205474010000000000000000000000000000000000000000900467ffffffffffffffff1692915050565b60008054600160a060020a0316808252600160208181526040808520815160a08101835289815280840189905267ffffffffffffffff881692810192909252606082019490945260808101839052835492830180855593855293819020845180519495946003909402909101926110339284920190611df2565b50602082810151805161104c9260018501920190611df2565b506040820151600290910180546060840151608090940151151560e060020a027cff0000000000000000000000000000000000000000000000000000000019600160a060020a0390951668010000000000000000027bffffffffffffffffffffffffffffffffffffffff00000000000000001967ffffffffffffffff90951667ffffffffffffffff199093169290921793909316179290921617905550505050565b606060005b60008054600160a060020a031681526001602052604090205481101561088c57826040518082805190602001908083835b602083106111435780518252601f199092019160209182019101611124565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912060008054600160a060020a0316815260019092529290208054929450925084918210905061119557fe5b906000526020600020906003020160000160405180828054600181600116156101000203166002900480156112015780601f106111df576101008083540402835291820191611201565b820191906000526020600020905b8154815290600101906020018083116111ed575b505091505060405180910390206000191614156112ed5760008054600160a060020a0316815260016020526040902080548290811061123c57fe5b90600052602060002090600302016001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112e15780601f106112b6576101008083540402835291602001916112e1565b820191906000526020600020905b8154815290600101906020018083116112c457829003601f168201915b5050505050915061088c565b6001016110f3565b6000805b600160a060020a038316600090815260026020526040902054811015610a9957836040518082805190602001908083835b602083106113495780518252601f19909201916020918201910161132a565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120600160a060020a038916600090815260029092529290208054929450925084918210905061139b57fe5b906000526020600020906003020160000160405180828054600181600116156101000203166002900480156114075780601f106113e5576101008083540402835291820191611407565b820191906000526020600020905b8154815290600101906020018083116113f3575b5050915050604051809103902060001916141561146e57600160a060020a038316600090815260026020526040902080548290811061144257fe5b906000526020600020906003020160020160089054906101000a9004600160a060020a03169150610a99565b6001016112f9565b6000805b600160a060020a038316600090815260026020526040902054811015610a9957836040518082805190602001908083835b602083106114ca5780518252601f1990920191602091820191016114ab565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120600160a060020a038916600090815260029092529290208054929450925084918210905061151c57fe5b906000526020600020906003020160000160405180828054600181600116156101000203166002900480156115885780601f10611566576101008083540402835291820191611588565b820191906000526020600020905b815481529060010190602001808311611574575b505091505060405180910390206000191614156115e957600160a060020a03831660009081526002602052604090208054829081106115c357fe5b9060005260206000209060030201600201601c9054906101000a900460ff169150610a99565b60010161147a565b600067ffffffffffffffff8216811061169157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f43616e2774206269642075702077697468206e65676174697665732076616c7560448201527f6573000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b61169a83610d9b565b151560011461170a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f43616e2774206269642075702061206e6f742061637469766520656e74727900604482015290519081900360640190fd5b6117148333610f16565b9050604080519081016040528033600160a060020a0316815260200183830167ffffffffffffffff168152506003846040518082805190602001908083835b602083106117725780518252601f199092019160209182019101611753565b51815160001960209485036101000a019081169019909116179052920194855250604080519485900382019094203360009081529082529390932084518154959094015167ffffffffffffffff1674010000000000000000000000000000000000000000027fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff600160a060020a0390951673ffffffffffffffffffffffffffffffffffffffff199096169590951793909316939093179091555061183a905083828401610c1a565b1515600114156119fa5733600090815260026020908152604091829020825160a0810190935285835291908101611870866110ee565b815260200161187e86610712565b67ffffffffffffffff16815233602080830191909152600160409092018290528354918201808555600094855293819020835180516003909402909101926118c99284920190611df2565b5060208281015180516118e29260018501920190611df2565b506040828101516002929092018054606085015160809095015167ffffffffffffffff1990911667ffffffffffffffff909416939093177bffffffffffffffffffffffffffffffffffffffff0000000000000000191668010000000000000000600160a060020a0395861602177cff00000000000000000000000000000000000000000000000000000000191660e060020a931515939093029290921790915560008054909216825260016020529020905061199d846119ff565b815481106119a757fe5b600091825260208220600390910201906119c18282611e70565b6119cf600183016000611e70565b5060020180547fffffff00000000000000000000000000000000000000000000000000000000001690555b505050565b6000805b60008054600160a060020a031681526001602052604090205481101561088c57826040518082805190602001908083835b60208310611a535780518252601f199092019160209182019101611a34565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912060008054600160a060020a03168152600190925292902080549294509250849182109050611aa557fe5b90600052602060002090600302016000016040518082805460018160011615610100020316600290048015611b115780601f10611aef576101008083540402835291820191611b11565b820191906000526020600020905b815481529060010190602001808311611afd575b50509150506040518091039020600019161415611b305780915061088c565b600101611a03565b6000805b600160a060020a038316600090815260026020526040902054811015610a9957836040518082805190602001908083835b60208310611b8c5780518252601f199092019160209182019101611b6d565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120600160a060020a0389166000908152600290925292902080549294509250849182109050611bde57fe5b90600052602060002090600302016000016040518082805460018160011615610100020316600290048015611c4a5780601f10611c28576101008083540402835291820191611c4a565b820191906000526020600020905b815481529060010190602001808311611c36575b50509150506040518091039020600019161415611c6957809150610a99565b600101611b3c565b6000805b60008054600160a060020a031681526001602052604090205481101561088c57826040518082805190602001908083835b60208310611cc55780518252601f199092019160209182019101611ca6565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912060008054600160a060020a03168152600190925292902080549294509250849182109050611d1757fe5b90600052602060002090600302016000016040518082805460018160011615610100020316600290048015611d835780601f10611d61576101008083540402835291820191611d83565b820191906000526020600020905b815481529060010190602001808311611d6f575b50509150506040518091039020600019161415611dea5760008054600160a060020a03168152600160205260409020805482908110611dbe57fe5b906000526020600020906003020160020160089054906101000a9004600160a060020a0316915061088c565b600101611c75565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611e3357805160ff1916838001178555611e60565b82800160010185558215611e60579182015b82811115611e60578251825591602001919060010190611e45565b50611e6c929150611eb7565b5090565b50805460018160011615610100020316600290046000825580601f10611e965750611eb4565b601f016020900490600052602060002090810190611eb49190611eb7565b50565b611ed191905b80821115611e6c5760008155600101611ebd565b905600a165627a7a72305820674d4fcb5dfd5be9710d924266d8ee6380219d195b5cb6cd623a9cf861dd67200029";

    public static final String FUNC_GETADMINENTRYPRICE = "getAdminEntryPrice";

    public static final String FUNC_GETUSERENTRYTICKETVALUE = "getUserEntryTicketValue";

    public static final String FUNC_GETUSERNENTRYPRICE = "getUsernEntryPrice";

    public static final String FUNC_CHECKIFPAYMENTSATISFIED = "checkIfPaymentSatisfied";

    public static final String FUNC_GETADMINENTRYACTIVE = "getAdminEntryActive";

    public static final String FUNC_GETBIDSPAYEDVALBYUUINTNAMEENTRYANDUSERADDR = "getBidsPayedValByUUintNameEntryAndUserAddr";

    public static final String FUNC_ADDENTRY2ADMINENTRIES = "addEntry2AdminEntries";

    public static final String FUNC_GETADMINENTRYTICKETVALUE = "getAdminEntryTicketValue";

    public static final String FUNC_GETUSERENTRYOWNER = "getUserEntryOwner";

    public static final String FUNC_GETUSERENTRYACTIVE = "getUserEntryActive";

    public static final String FUNC_ADDBIDUP = "addBidUp";

    public static final String FUNC_GETADMINENTRYNAMEARRAYPOSITION = "getAdminEntryNameArrayPosition";

    public static final String FUNC_GETUSERENTRYNAMEARRAYPOSITION = "getUserEntryNameArrayPosition";

    public static final String FUNC_GETADMINENTRYOWNER = "getAdminEntryOwner";

    @Deprecated
    protected AdminDemo(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected AdminDemo(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected AdminDemo(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected AdminDemo(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<BigInteger> getAdminEntryPrice(String _uuidName) {
        final Function function = new Function(FUNC_GETADMINENTRYPRICE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuidName)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> getUserEntryTicketValue(String _uuidName, String _userAddres) {
        final Function function = new Function(FUNC_GETUSERENTRYTICKETVALUE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuidName),
                        new org.web3j.abi.datatypes.Address(_userAddres)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {
                }));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> getUsernEntryPrice(String _uuidName, String _userAddres) {
        final Function function = new Function(FUNC_GETUSERNENTRYPRICE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuidName),
                        new org.web3j.abi.datatypes.Address(_userAddres)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Boolean> checkIfPaymentSatisfied(String _uuidName, BigInteger _amount) {
        final Function function = new Function(FUNC_CHECKIFPAYMENTSATISFIED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuidName),
                        new org.web3j.abi.datatypes.generated.Uint64(_amount)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {
                }));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> getAdminEntryActive(String _uuidName) {
        final Function function = new Function(FUNC_GETADMINENTRYACTIVE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuidName)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {
                }));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<BigInteger> getBidsPayedValByUUintNameEntryAndUserAddr(String _uuidName, String _userAddr) {
        final Function function = new Function(FUNC_GETBIDSPAYEDVALBYUUINTNAMEENTRYANDUSERADDR,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuidName),
                        new org.web3j.abi.datatypes.Address(_userAddr)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> addEntry2AdminEntries(String _uuidName, String _ticket, BigInteger _price) {
        final Function function = new Function(
                FUNC_ADDENTRY2ADMINENTRIES,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuidName),
                        new org.web3j.abi.datatypes.Utf8String(_ticket),
                        new org.web3j.abi.datatypes.generated.Uint64(_price)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getAdminEntryTicketValue(String _uuidName) {
        final Function function = new Function(FUNC_GETADMINENTRYTICKETVALUE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuidName)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {
                }));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getUserEntryOwner(String _uuidName, String _userAddres) {
        final Function function = new Function(FUNC_GETUSERENTRYOWNER,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuidName),
                        new org.web3j.abi.datatypes.Address(_userAddres)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {
                }));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Boolean> getUserEntryActive(String _uuidName, String _userAddres) {
        final Function function = new Function(FUNC_GETUSERENTRYACTIVE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuidName),
                        new org.web3j.abi.datatypes.Address(_userAddres)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {
                }));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> addBidUp(String _entryUuidName, BigInteger _paymentValue) {
        final Function function = new Function(
                FUNC_ADDBIDUP,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_entryUuidName),
                        new org.web3j.abi.datatypes.generated.Uint64(_paymentValue)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getAdminEntryNameArrayPosition(String _uuidName) {
        final Function function = new Function(FUNC_GETADMINENTRYNAMEARRAYPOSITION,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuidName)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getUserEntryNameArrayPosition(String _uuidName, String _userAddres) {
        final Function function = new Function(FUNC_GETUSERENTRYNAMEARRAYPOSITION,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuidName),
                        new org.web3j.abi.datatypes.Address(_userAddres)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {
                }));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> getAdminEntryOwner(String _uuidName) {
        final Function function = new Function(FUNC_GETADMINENTRYOWNER,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuidName)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {
                }));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    @Deprecated
    public static AdminDemo load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new AdminDemo(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static AdminDemo load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new AdminDemo(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static AdminDemo load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new AdminDemo(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static AdminDemo load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new AdminDemo(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<AdminDemo> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(AdminDemo.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<AdminDemo> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(AdminDemo.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<AdminDemo> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(AdminDemo.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<AdminDemo> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(AdminDemo.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
